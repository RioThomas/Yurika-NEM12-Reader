import datetime
from unittest import TestCase

from src.NMI_Reader.interval import Interval


class TestInterval(TestCase):

    def setUp(self):
        self.interval_string_long = ['300', '20211001', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
                                     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
                                     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0.19', '0.47', '1.48', '0.32', '0.01', '0', '0.09', '1.26', '1.28', '0.45', '0.01', '0',
                                     '0.64', '0.86', '3.12', '2.84', '2.23', '1.78', '1.22', '4.36', '3.15', '3.13', '4.07', '3.67', '2.6', '2.47', '3.29', '2.66', '1.82', '3.25', '3.18', '2.75', '2.56', '2.56', '2.54', '2.42', '2.59', '2.44', '2.33', '2.18', '2', '2.12', '1', '0.2', '0.02',
                                     '0.69', '0.51', '1.27', '0.91', '0.51', '0.09', '0.08', '0.19', '0.15', '0.33', '0.21', '0.07', '0.02', '0.01', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
                                     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
                                     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', 'V', '', '', '20211002013412', '', '']

        self.interval_string_short = ['300', '20210826', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
                                      '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0.19', '4.53', '6.6', '12.9', '9.21',
                                      '1.16', '0', '0.02', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
                                      '0', '0', 'V', '', '', '20210827115749', '', '']

        self.interval = Interval(self.interval_string_short)

        self.interval_5min = Interval(self.interval_string_long)

    def test_date(self):
        date = datetime.datetime(2021, 8, 26)
        assert (self.interval.date == date)

    def test_value(self):
        value = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                 0, 0, 0, 0, 0, 0.19, 4.53, 6.6, 12.9, 9.21, 1.16, 0, 0.02, 0, 0,
                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        assert self.interval.values == value

    def test_interval_period(self):
        interval_period = 30
        assert self.interval.interval_period == interval_period, \
            f"Expected {self.interval.interval_period}, got {interval_period}"

    def test_last_updated(self):
        last_updated = datetime.datetime(2021, 8, 27, hour=11, minute=57, second=49)  # "20210827115749"
        assert self.interval.last_updated == last_updated

    def test_get_value(self):
        self.interval_5min.get_value(30)
